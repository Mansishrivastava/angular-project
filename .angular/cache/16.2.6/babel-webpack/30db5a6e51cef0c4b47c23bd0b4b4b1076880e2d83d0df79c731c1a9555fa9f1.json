{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WeatherComponent = class WeatherComponent {\n  constructor(cityService) {\n    this.cityService = cityService;\n    this.cities = [];\n  }\n  ngOnInit() {\n    this.cities = this.cityService.getCities();\n  }\n  onChooseCity(index) {\n    this.chosenCity = index;\n  }\n};\nWeatherComponent = __decorate([Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})], WeatherComponent);","map":{"version":3,"names":["Component","WeatherComponent","constructor","cityService","cities","ngOnInit","getCities","onChooseCity","index","chosenCity","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/mansi/Documents/personal_projects/angular-project/src/app/weather/weather.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { City } from '../core/interfaces/city';\nimport { CityService } from '../core/services/city.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n\n  cities: Array<City> = [];\n  chosenCity:any; // create variable for saving current (chosen) city\n \n  constructor(private cityService: CityService) { }\n \n  ngOnInit() {\n    this.cities = this.cityService.getCities();\n  }\n \n  onChooseCity(index: number): void { // create method, which will handle choose of the city\n  this.chosenCity = index;\n }\n \n }"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAK3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAC,MAAM,GAAgB,EAAE;EAGwB;EAEhDC,QAAQA,CAAA;IACN,IAAI,CAACD,MAAM,GAAG,IAAI,CAACD,WAAW,CAACG,SAAS,EAAE;EAC5C;EAEAC,YAAYA,CAACC,KAAa;IAC1B,IAAI,CAACC,UAAU,GAAGD,KAAK;EACxB;CAEC;AAfWP,gBAAgB,GAAAS,UAAA,EAL5BV,SAAS,CAAC;EACTW,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWZ,gBAAgB,CAe3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}