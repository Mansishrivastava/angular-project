{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/city.service\";\nexport class WeatherComponent {\n  constructor(cityService) {\n    this.cityService = cityService;\n    this.cities = []; // create empty array of cities\n  } // inject CityService to private variable\n  ngOnInit() {\n    this.cities = this.cityService.getCities(); // on component initialize get data from service to local variable\n  }\n  static #_ = this.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || WeatherComponent)(i0.ɵɵdirectiveInject(i1.CityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WeatherComponent,\n    selectors: [[\"app-weather\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"page\"], [1, \"page-header\"], [1, \"page-body\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Weather Forecast\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".page[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  padding: 20px;\\n}\\n.page-header[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  max-width: 1140px;\\n  height: 80px;\\n  margin: 0 auto;\\n  border-bottom: 2px solid #007fff;\\n  font-size: 36px;\\n  font-weight: 700;\\n  color: #0e63c7;\\n}\\n.page-body[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  max-width: 1140px;\\n  min-height: calc(100vh - 120px);\\n  margin: 0 auto;\\n}\\n.page-body__sidebar[_ngcontent-%COMP%] {\\n  width: 300px;\\n  border-right: 2px solid #007fff;\\n}\\n.page-body__details[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvd2VhdGhlci93ZWF0aGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FBQ0o7QUFDSTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxnQ0FBQTtFQUNBLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFDTjtBQUVJO0VBQ0UsYUFBQTtFQUVBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLCtCQUFBO0VBQ0EsY0FBQTtBQUROO0FBR007RUFDRSxZQUFBO0VBQ0EsK0JBQUE7QUFEUjtBQUlNO0VBQ0UsV0FBQTtBQUZSIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgXG4gICAgJi1oZWFkZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiAxMTQwcHg7XG4gICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMDA3ZmZmO1xuICAgICAgZm9udC1zaXplOiAzNnB4O1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIGNvbG9yOiAjMGU2M2M3O1xuICAgIH1cbiAgIFxuICAgICYtYm9keSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgXG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogMTE0MHB4O1xuICAgICAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDEyMHB4KTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgXG4gICAgICAmX19zaWRlYmFyIHtcbiAgICAgICAgd2lkdGg6IDMwMHB4O1xuICAgICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjMDA3ZmZmO1xuICAgICAgfVxuICAgXG4gICAgICAmX19kZXRhaWxzIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuICAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["WeatherComponent","constructor","cityService","cities","ngOnInit","getCities","_","i0","ɵɵdirectiveInject","i1","CityService","_2","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/Users/mansi/Documents/personal_projects/angular-project/src/app/weather/weather.component.ts","/Users/mansi/Documents/personal_projects/angular-project/src/app/weather/weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { City } from '../core/interfaces/city';\nimport { CityService } from '../core/services/city.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent {\n\n  cities: Array<City> = []; // create empty array of cities\n\n  constructor(private cityService: CityService) { } // inject CityService to private variable\n \n  ngOnInit() {\n    this.cities = this.cityService.getCities(); // on component initialize get data from service to local variable\n  }\n \n}\n","<div class=\"page\">\n    <div class=\"page-header\">Weather Forecast</div>\n    <div class=\"page-body\">\n      <!--Cities list will be here soon...-->\n    </div>\n   </div>"],"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF/B,KAAAC,MAAM,GAAgB,EAAE,CAAC,CAAC;EAEsB,CAAC,CAAC;EAElDC,QAAQA,CAAA;IACN,IAAI,CAACD,MAAM,GAAG,IAAI,CAACD,WAAW,CAACG,SAAS,EAAE,CAAC,CAAC;EAC9C;EAAC,QAAAC,CAAA,G;qBARUN,gBAAgB,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBX,gBAAgB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7BX,EAAA,CAAAa,cAAA,aAAkB;QACWb,EAAA,CAAAc,MAAA,uBAAgB;QAAAd,EAAA,CAAAe,YAAA,EAAM;QAC/Cf,EAAA,CAAAgB,SAAA,aAEM;QACPhB,EAAA,CAAAe,YAAA,EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}