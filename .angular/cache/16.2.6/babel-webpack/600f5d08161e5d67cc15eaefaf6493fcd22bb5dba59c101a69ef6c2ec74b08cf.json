{"ast":null,"code":"export const CITIES = [{\n  name: 'New-York',\n  forecast: {\n    conditions: 'cloudy',\n    wind: {\n      speed: 6,\n      direction: 'north-west'\n    },\n    temperature: {\n      day: {\n        min: 14,\n        max: 18\n      },\n      night: {\n        min: 5,\n        max: 8\n      }\n    }\n  }\n}, {\n  name: 'London',\n  forecast: {\n    conditions: 'rain',\n    wind: {\n      speed: 3,\n      direction: 'east'\n    },\n    temperature: {\n      day: {\n        min: 11,\n        max: 14\n      },\n      night: {\n        min: 3,\n        max: 7\n      }\n    }\n  }\n}, {\n  name: 'Tokyo',\n  forecast: {\n    conditions: 'sunny',\n    wind: {\n      speed: 2,\n      direction: 'south'\n    },\n    temperature: {\n      day: {\n        min: 22,\n        max: 28\n      },\n      night: {\n        min: 16,\n        max: 19\n      }\n    }\n  }\n}];","map":{"version":3,"names":["CITIES","name","forecast","conditions","wind","speed","direction","temperature","day","min","max","night"],"sources":["/Users/mansi/Documents/personal_projects/angular-project/src/app/mocks/cities.mock.ts"],"sourcesContent":["import { City } from '../core/interfaces/city';\n\nexport const CITIES: Array<City> = [\n {\n   name: 'New-York',\n   forecast: {\n     conditions: 'cloudy',\n     wind: {\n       speed: 6,\n       direction: 'north-west'\n     },\n     temperature: {\n       day: {\n         min: 14,\n         max: 18\n       },\n       night: {\n         min: 5,\n         max: 8\n       }\n     }\n   }\n },\n {\n   name: 'London',\n   forecast: {\n     conditions: 'rain',\n     wind: {\n       speed: 3,\n       direction: 'east'\n     },\n     temperature: {\n       day: {\n         min: 11,\n         max: 14\n       },\n       night: {\n         min: 3,\n         max: 7\n       }\n     }\n   }\n },\n {\n   name: 'Tokyo',\n   forecast: {\n     conditions: 'sunny',\n     wind: {\n       speed: 2,\n       direction: 'south'\n     },\n     temperature: {\n       day: {\n         min: 22,\n         max: 28\n       },\n       night: {\n         min: 16,\n         max: 19\n       }\n     }\n   }\n }\n];"],"mappings":"AAEA,OAAO,MAAMA,MAAM,GAAgB,CAClC;EACEC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE;IACRC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE;MACJC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;KACZ;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE;OACN;MACDC,KAAK,EAAE;QACLF,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;;;;CAIZ,EACD;EACET,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE;IACRC,UAAU,EAAE,MAAM;IAClBC,IAAI,EAAE;MACJC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;KACZ;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE;OACN;MACDC,KAAK,EAAE;QACLF,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;;;;CAIZ,EACD;EACET,IAAI,EAAE,OAAO;EACbC,QAAQ,EAAE;IACRC,UAAU,EAAE,OAAO;IACnBC,IAAI,EAAE;MACJC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE;KACZ;IACDC,WAAW,EAAE;MACXC,GAAG,EAAE;QACHC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE;OACN;MACDC,KAAK,EAAE;QACLF,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE;;;;CAIZ,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}